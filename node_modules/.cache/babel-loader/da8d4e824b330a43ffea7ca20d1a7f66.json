{"ast":null,"code":"import React from'react';import'./ChartBar.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChartBar=function ChartBar(props){//This variable will be assigned as a css style\nvar barFillHeight=\"0%\";//If max value is grater than 0\nif(props.maxValue>0){//If so, obtain the percentage between 0 and 100 by which this bar will be filled and convert it to a string\nbarFillHeight=Math.round(props.value/props.maxValue*100)+'%';}return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-bar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__inner\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__fill\",style:{height:barFillHeight}})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__label\",children:props.label})]});};export default ChartBar;","map":{"version":3,"sources":["/Users/earuiz1/Desktop/React_Guide/expenses-tracker-demo/src/components/Chart/ChartBar.js"],"names":["React","ChartBar","props","barFillHeight","maxValue","Math","round","value","height","label"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,gBAAP,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAExB;AACA,GAAIC,CAAAA,aAAa,CAAG,IAApB,CAEA;AACA,GAAGD,KAAK,CAACE,QAAN,CAAiB,CAApB,CAAsB,CAClB;AACAD,aAAa,CAAGE,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,KAAN,CAAcL,KAAK,CAACE,QAArB,CAAiC,GAA5C,EAAmD,GAAnE,CACH,CACD,mBACI,aAAK,SAAS,CAAC,WAAf,wBACI,YAAK,SAAS,CAAC,kBAAf,uBAEI,YAAK,SAAS,CAAC,iBAAf,CAAiC,KAAK,CAAE,CAACI,MAAM,CAAEL,aAAT,CAAxC,EAFJ,EADJ,cAMI,YAAK,SAAS,CAAC,kBAAf,UAAmCD,KAAK,CAACO,KAAzC,EANJ,GADJ,CAUH,CApBD,CAsBA,cAAeR,CAAAA,QAAf","sourcesContent":["import React from 'react'\n\nimport './ChartBar.css'\n\nconst ChartBar = (props) => {\n\n    //This variable will be assigned as a css style\n    let barFillHeight = \"0%\";\n\n    //If max value is grater than 0\n    if(props.maxValue > 0){\n        //If so, obtain the percentage between 0 and 100 by which this bar will be filled and convert it to a string\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                {/* Set the style height css dynamically */}\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n            </div>\n            {/* Output label  */}\n            <div className=\"chart-bar__label\">{props.label}</div>      \n        </div>\n    )\n}\n\nexport default ChartBar\n"]},"metadata":{},"sourceType":"module"}