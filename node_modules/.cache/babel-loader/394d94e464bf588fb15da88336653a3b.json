{"ast":null,"code":"var _jsxFileName = \"/Users/earuiz1/Desktop/React_Guide/01-starting-setup/src/components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  //Create a new state to add and save new expense \n  const [isEditting, setEditing] = useState(false); //Create a function to pass down data from a child component to a parent\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    //Create an object\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    }; //Now, actually call the function you declared in App.js and pass the values of the form (expenseData)\n\n    props.onAddExpense(expenseData); //Show the \"Add new Expense\" button after the new expense has been added.\n\n    setEditing(false);\n  }; //Create a function to know If button was click set const to true and show the actual form\n\n\n  const startEditingHandler = () => {\n    console.log(\"Button was clicked\");\n    setEditing(true);\n  }; //Create a function to know If button was click set const to false and show only the button \n\n\n  const stopEditingHandler = () => {\n    setEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditting && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }, this), isEditting && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onCancel: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewExpense, \"PwVJgPMV1JDD53mM12EHOoQu2/8=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/Users/earuiz1/Desktop/React_Guide/01-starting-setup/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditting","setEditing","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","startEditingHandler","console","log","stopEditingHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B;AACA,QAAM,CAACC,UAAD,EAAaC,UAAb,IAA2BL,QAAQ,CAAC,KAAD,CAAzC,CAH0B,CAKzB;;AACD,QAAMM,sBAAsB,GAAIC,kBAAD,IAAwB;AAEnD;AACA,UAAMC,WAAW,GAAE,EACf,GAAGD,kBADY;AAEfE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFW,KAAnB,CAHmD,CAQnD;;AACAT,IAAAA,KAAK,CAACU,YAAN,CAAmBL,WAAnB,EATmD,CAWnD;;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAbD,CAN0B,CAqB1B;;;AACA,QAAMS,mBAAmB,GAAG,MAAM;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAX,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEH,GAJD,CAtB0B,CA4B1B;;;AACA,QAAMY,kBAAkB,GAAG,MAAM;AAC7BZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACK,CAACD,UAAD,iBAAe;AAAQ,MAAA,OAAO,EAAEU,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADpB,EAGKV,UAAU,iBAAI,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAIE,sBAAlC;AAA0D,MAAA,QAAQ,EAAEW;AAApE;AAAA;AAAA;AAAA;AAAA,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAzCD;;GAAMf,U;;KAAAA,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\"\n\nconst NewExpense = (props) => {\n\n    //Create a new state to add and save new expense \n    const [isEditting, setEditing] = useState(false);\n\n     //Create a function to pass down data from a child component to a parent\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n     \n        //Create an object\n        const expenseData ={\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        };\n\n        //Now, actually call the function you declared in App.js and pass the values of the form (expenseData)\n        props.onAddExpense(expenseData);\n\n        //Show the \"Add new Expense\" button after the new expense has been added.\n        setEditing(false);\n    };\n\n    //Create a function to know If button was click set const to true and show the actual form\n    const startEditingHandler = () => {\n        console.log(\"Button was clicked\");\n        setEditing(true);\n     \n    }\n\n    //Create a function to know If button was click set const to false and show only the button \n    const stopEditingHandler = () => {\n        setEditing(false);\n     \n    }\n\n    return (\n        <div className=\"new-expense\">\n            {!isEditting && <button onClick={startEditingHandler}>Add New Expense</button>}\n             {/* Create a pointer that points to the saveExpenseDataHandler function */}\n            {isEditting && <ExpenseForm onSaveExpenseData = {saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n        </div>\n    )\n}\n\nexport default NewExpense\n"]},"metadata":{},"sourceType":"module"}