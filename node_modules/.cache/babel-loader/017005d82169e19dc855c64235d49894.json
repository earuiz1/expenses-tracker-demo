{"ast":null,"code":"import _slicedToArray from\"/Users/earuiz1/Desktop/React_Guide/expenses-tracker-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import ExpensesFilter from'./ExpensesFilter';import Card from'../UI/Card';import ExpensesList from'./ExpensesList';import ExpensesChart from'./ExpensesChart';import'./Expenses.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Expenses=function Expenses(props){//Create the state \nvar _useState=useState('2020'),_useState2=_slicedToArray(_useState,2),enteredYear=_useState2[0],setEnteredYear=_useState2[1];//Create a function to pass down data from a child component to a parent\nvar ExpenseFilterHandler=function ExpenseFilterHandler(selectedYear){console.log('In Expenses.js');console.log(selectedYear);//Assign the value to the actual state\nsetEnteredYear(selectedYear);};//Create a new const with all expensesList and filter values based on some condition\nvar filteredExpenses=props.expensesList.filter(function(x){return x.date.getFullYear().toString()===enteredYear;});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Card,{className:\"expenses\",children:[/*#__PURE__*/_jsx(ExpensesFilter,{defaultYear:enteredYear,onAddChangeFilter:ExpenseFilterHandler}),/*#__PURE__*/_jsx(ExpensesChart,{expenses:filteredExpenses}),/*#__PURE__*/_jsx(ExpensesList,{items:filteredExpenses})]})});};export default Expenses;","map":{"version":3,"sources":["/Users/earuiz1/Desktop/React_Guide/expenses-tracker-demo/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpensesFilter","Card","ExpensesList","ExpensesChart","Expenses","props","enteredYear","setEnteredYear","ExpenseFilterHandler","selectedYear","console","log","filteredExpenses","expensesList","filter","x","date","getFullYear","toString"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,MAAO,gBAAP,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAGxB;AACA,cAAsCN,QAAQ,CAAC,MAAD,CAA9C,wCAAOO,WAAP,eAAoBC,cAApB,eAEA;AACA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,YAAD,CAAkB,CAE3CC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,YAAZ,EAEA;AACAF,cAAc,CAACE,YAAD,CAAd,CAEH,CARD,CAUA;AACA,GAAMG,CAAAA,gBAAgB,CAAGP,KAAK,CAACQ,YAAN,CAAmBC,MAAnB,CAA0B,SAAAC,CAAC,CAAI,CACpD,MAAOA,CAAAA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,KAAoCZ,WAA3C,CACH,CAFwB,CAAzB,CAIA,mBACI,kCACI,MAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,wBAIA,KAAC,cAAD,EAAgB,WAAW,CAAEA,WAA7B,CAA0C,iBAAiB,CAAIE,oBAA/D,EAJA,cAoBA,KAAC,aAAD,EAAe,QAAQ,CAAEI,gBAAzB,EApBA,cAqBA,KAAC,YAAD,EAAc,KAAK,CAAIA,gBAAvB,EArBA,GADJ,EADJ,CA2BH,CAjDD,CAmDA,cAAeR,CAAAA,QAAf","sourcesContent":["import React, {useState} from 'react'\nimport ExpensesFilter from './ExpensesFilter'\nimport Card from '../UI/Card'\nimport ExpensesList from './ExpensesList'\nimport ExpensesChart from './ExpensesChart'\n\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n\n\n    //Create the state \n    const [enteredYear, setEnteredYear] = useState('2020');\n    \n    //Create a function to pass down data from a child component to a parent\n    const ExpenseFilterHandler = (selectedYear) => {\n\n        console.log('In Expenses.js');\n        console.log(selectedYear);\n\n        //Assign the value to the actual state\n        setEnteredYear(selectedYear);\n     \n    }\n    \n    //Create a new const with all expensesList and filter values based on some condition\n    const filteredExpenses = props.expensesList.filter(x => {\n        return x.date.getFullYear().toString() === enteredYear;\n    });\n\n    return (\n        <div>\n            <Card className=\"expenses\">\n\n            {/* Create a pointer that points to the ExpenseFilterHandler function */}\n            {/* One thing to take into consideration is that the default year never changes once you filter a year, what you can do is pass another props and use two way binding  */}\n            <ExpensesFilter defaultYear={enteredYear} onAddChangeFilter = {ExpenseFilterHandler}/>\n\n            {/* To remove the hardcode code below and do things dynamically, create an array full of jsx items using the .map() method in javascript */}\n            {/* Add a special property called \"key\" to help react identify individual items using unique ids to remove warning and avoid future bugs*/}\n            {/* Implement logic operation to show a message if a filter year does not have any item available  */}\n\n            {/* {filteredExpenses.length  === 0 && <p> No expenses found. </p>}\n            {filteredExpenses.length > 0 &&\n                filteredExpenses.map((x) => (\n                    <ExpenseItem \n                        key={x.id} \n                        title={x.title} \n                        amount={x.amount} \n                        date={x.date}\n                     />\n                ))} */}\n            <ExpensesChart expenses={filteredExpenses}/>\n            <ExpensesList items = {filteredExpenses}/>\n            </Card>\n        </div>\n    )\n}\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}