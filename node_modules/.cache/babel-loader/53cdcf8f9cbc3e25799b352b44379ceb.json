{"ast":null,"code":"import _slicedToArray from\"/Users/earuiz1/Desktop/React_Guide/expenses-tracker-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import\"./ExpenseForm.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExpenseForm=function ExpenseForm(props){//Setting the state for the title, amount and date\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),enteredTitle=_useState2[0],setEnteredTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),enteredAmount=_useState4[0],setEnteredAmount=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),enteredDate=_useState6[0],setEnteredDate=_useState6[1];//Creating event handler to set the title, amount and date\nvar titleChangeHandler=function titleChangeHandler(event){setEnteredTitle(event.target.value);};var amountChangeHandler=function amountChangeHandler(event){setEnteredAmount(event.target.value);};var dateChangeHandler=function dateChangeHandler(event){setEnteredDate(event.target.value);};var submitHandler=function submitHandler(event){//Prevents the page from reloading \nevent.preventDefault();//Object to store all data \nvar expenseData={title:enteredTitle,amount:+enteredAmount,date:new Date(enteredDate)};//Log the data to see if it works\n//console.log(expenseData);\n//Now, actually call the function you declared in NewExpense.js and pass the of the form (expenseData)\nprops.onSaveExpenseData(expenseData);//Reset the values after the data is submmited to clear the input (Two-way binding)\nsetEnteredTitle('');setEnteredAmount('');setEnteredDate('');};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:enteredTitle,onChange:titleChangeHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0.01\",step:\"0.01\",value:enteredAmount,onChange:amountChangeHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",min:\"2019-01-01\",max:\"2022-12-31\",value:enteredDate,onChange:dateChangeHandler})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Expense\"})]})]})});};export default ExpenseForm;","map":{"version":3,"sources":["/Users/earuiz1/Desktop/React_Guide/expenses-tracker-demo/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","onCancel"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CAEA,MAAO,mBAAP,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAE3B;AACA,cAA0CF,QAAQ,CAAC,EAAD,CAAlD,wCAAOG,YAAP,eAAsBC,eAAtB,eACA,eAA4CJ,QAAQ,CAAC,EAAD,CAApD,yCAAOK,aAAP,eAAuBC,gBAAvB,eACA,eAAwCN,QAAQ,CAAC,EAAD,CAAhD,yCAAOO,WAAP,eAAqBC,cAArB,eAEA;AACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CAClCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CACH,CAFD,CAIA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACH,KAAD,CAAW,CACnCJ,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB,CACH,CAFD,CAIA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACJ,KAAD,CAAW,CACjCF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CACH,CAFD,CAGA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,KAAD,CAAW,CAC7B;AACAA,KAAK,CAACM,cAAN,GAEA;AACA,GAAMC,CAAAA,WAAW,CAAC,CACdC,KAAK,CAAEf,YADO,CAEdgB,MAAM,CAAE,CAACd,aAFK,CAGde,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAASd,WAAT,CAHQ,CAAlB,CAOA;AACA;AAEA;AACAL,KAAK,CAACoB,iBAAN,CAAwBL,WAAxB,EAEA;AACAb,eAAe,CAAC,EAAD,CAAf,CACAE,gBAAgB,CAAC,EAAD,CAAhB,CACAE,cAAc,CAAC,EAAD,CAAd,CAEH,CAvBD,CAyBA,mBACI,kCAEA,cAAM,QAAQ,CAAGO,aAAjB,wBACI,aAAK,SAAS,CAAC,uBAAf,wBACI,aAAK,SAAS,CAAC,sBAAf,wBACI,gCADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEZ,YAA1B,CAAwC,QAAQ,CAAEM,kBAAlD,EAFJ,GADJ,cAKI,aAAK,SAAS,CAAC,sBAAf,wBACI,iCADJ,cAEI,cAAO,IAAI,CAAC,QAAZ,CAAqB,GAAG,CAAC,MAAzB,CAAgC,IAAI,CAAC,MAArC,CAA4C,KAAK,CAAEJ,aAAnD,CAAkE,QAAQ,CAAEQ,mBAA5E,EAFJ,GALJ,cASI,aAAK,SAAS,CAAC,sBAAf,wBACI,+BADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,GAAG,CAAC,YAAvB,CAAoC,GAAG,CAAC,YAAxC,CAAqD,KAAK,CAAEN,WAA5D,CAAyE,QAAQ,CAAEO,iBAAnF,EAFJ,GATJ,GADJ,cAeQ,aAAK,SAAS,CAAC,sBAAf,wBACA,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEZ,KAAK,CAACqB,QAArC,oBADA,cAEA,eAAQ,IAAI,CAAC,QAAb,yBAFA,GAfR,GAFA,EADJ,CAyBH,CArED,CAuEA,cAAetB,CAAAA,WAAf","sourcesContent":["import React, {useState} from 'react'\n\nimport \"./ExpenseForm.css\"\n\nconst ExpenseForm = (props) => {\n\n    //Setting the state for the title, amount and date\n    const [enteredTitle , setEnteredTitle ] = useState('');\n    const [enteredAmount , setEnteredAmount ] = useState('');\n    const [enteredDate , setEnteredDate ] = useState('');\n\n    //Creating event handler to set the title, amount and date\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    }\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    }\n    const submitHandler = (event) => {\n        //Prevents the page from reloading \n        event.preventDefault();\n\n        //Object to store all data \n        const expenseData={\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate),\n\n        };\n\n        //Log the data to see if it works\n        //console.log(expenseData);\n\n        //Now, actually call the function you declared in NewExpense.js and pass the of the form (expenseData)\n        props.onSaveExpenseData(expenseData);\n\n        //Reset the values after the data is submmited to clear the input (Two-way binding)\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n\n    }\n\n    return (\n        <div>\n        {/* //Use the onSubmit property to listen to changes in the form  */}\n        <form onSubmit ={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandler}/>\n                </div>\n                </div>\n                <div className='new-expense__actions'>\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n                <button type='submit'>Add Expense</button>\n            </div>\n      </form> \n      </div>     \n    )\n}\n\nexport default ExpenseForm\n"]},"metadata":{},"sourceType":"module"}