{"ast":null,"code":"var _jsxFileName = \"/Users/earuiz1/Desktop/React_Guide/01-starting-setup/src/components/Chart/ChartBar.js\";\nimport React from 'react';\nimport './ChartBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartBar = props => {\n  //This variable will be assigned as a css style\n  let barFillHeight = \"0%\"; //If max value is grater than 0\n\n  if (props.maxValue > 0) {\n    //If so, obtain the percentage between 0 and 100 by which this bar will be filled and convert it to a string\n    barFillHeight = Math.round(props.value / props.maxValue * 100) + '%';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__fill\",\n        style: {\n          height: barFillHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChartBar;\nexport default ChartBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"sources":["/Users/earuiz1/Desktop/React_Guide/01-starting-setup/src/components/Chart/ChartBar.js"],"names":["React","ChartBar","props","barFillHeight","maxValue","Math","round","value","height","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB;AACA,MAAIC,aAAa,GAAG,IAApB,CAHwB,CAKxB;;AACA,MAAGD,KAAK,CAACE,QAAN,GAAiB,CAApB,EAAsB;AAClB;AACAD,IAAAA,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,KAAN,GAAcL,KAAK,CAACE,QAArB,GAAiC,GAA5C,IAAmD,GAAnE;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,KAAK,EAAE;AAACI,UAAAA,MAAM,EAAEL;AAAT;AAAxC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCD,KAAK,CAACO;AAAzC;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApBD;;KAAMR,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import React from 'react'\n\nimport './ChartBar.css'\n\nconst ChartBar = (props) => {\n\n    //This variable will be assigned as a css style\n    let barFillHeight = \"0%\";\n\n    //If max value is grater than 0\n    if(props.maxValue > 0){\n        //If so, obtain the percentage between 0 and 100 by which this bar will be filled and convert it to a string\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                {/* Set the style height css dynamically */}\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n            </div>\n            {/* Output label  */}\n            <div className=\"chart-bar__label\">{props.label}</div>      \n        </div>\n    )\n}\n\nexport default ChartBar\n"]},"metadata":{},"sourceType":"module"}